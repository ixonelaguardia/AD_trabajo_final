/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import com.mysql.jdbc.Connection;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;

/**
 *
 * @author Ixone
 */
//public class Principal extends JFrame {
public class Principal extends JFrame {

    // VARIABLES
    private Connection c;
    private boolean conexion;

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.conexion = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_bd = new javax.swing.JMenu();
        mi_crearBD = new javax.swing.JMenuItem();
        mi_borrarBD = new javax.swing.JMenuItem();
        mi_salir = new javax.swing.JMenuItem();
        menu_prov = new javax.swing.JMenu();
        mi_gestor_prov = new javax.swing.JMenuItem();
        menu_consulta_prov = new javax.swing.JMenu();
        mi_prov_codigo = new javax.swing.JMenuItem();
        mi_prov_nombre = new javax.swing.JMenuItem();
        mi_prov_direc = new javax.swing.JMenuItem();
        menu_piezas = new javax.swing.JMenu();
        mi_gestor_piezas = new javax.swing.JMenuItem();
        menu_consulta_piezas = new javax.swing.JMenu();
        mi_piezas_codigo = new javax.swing.JMenuItem();
        mi_piezas_nombre = new javax.swing.JMenuItem();
        menu_proyec = new javax.swing.JMenu();
        mi_gestor_proyec = new javax.swing.JMenuItem();
        menu_consulta_proyec = new javax.swing.JMenu();
        mi_proyec_codigo = new javax.swing.JMenuItem();
        mi_proyec_nombre = new javax.swing.JMenuItem();
        mi_proyec_ciudad = new javax.swing.JMenuItem();
        menu_gestion = new javax.swing.JMenu();
        mi_relaciones = new javax.swing.JMenuItem();
        mi_sumi_prov = new javax.swing.JMenuItem();
        mi_sumi_piezas = new javax.swing.JMenuItem();
        mi_estadisticas = new javax.swing.JMenuItem();
        menu_ayuda = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("jLabel1");

        menu_bd.setText("Base de datos");

        mi_crearBD.setText("Crear base de datos");
        mi_crearBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_crearBDActionPerformed(evt);
            }
        });
        menu_bd.add(mi_crearBD);

        mi_borrarBD.setText("Borrar base de datos");
        mi_borrarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_borrarBDActionPerformed(evt);
            }
        });
        menu_bd.add(mi_borrarBD);

        mi_salir.setText("Salir");
        mi_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_salirActionPerformed(evt);
            }
        });
        menu_bd.add(mi_salir);

        jMenuBar1.add(menu_bd);

        menu_prov.setText("Proveedores");

        mi_gestor_prov.setText("Gestión de proveedores");
        mi_gestor_prov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_gestor_provActionPerformed(evt);
            }
        });
        menu_prov.add(mi_gestor_prov);

        menu_consulta_prov.setText("Consulta de proveedores");

        mi_prov_codigo.setText("Por Código");
        menu_consulta_prov.add(mi_prov_codigo);

        mi_prov_nombre.setText("Por Nombre");
        menu_consulta_prov.add(mi_prov_nombre);

        mi_prov_direc.setText("Por Dirección");
        menu_consulta_prov.add(mi_prov_direc);

        menu_prov.add(menu_consulta_prov);

        jMenuBar1.add(menu_prov);

        menu_piezas.setText("Piezas");

        mi_gestor_piezas.setText("Gestión de piezas");
        mi_gestor_piezas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_gestor_piezasActionPerformed(evt);
            }
        });
        menu_piezas.add(mi_gestor_piezas);

        menu_consulta_piezas.setText("Consulta de piezas");

        mi_piezas_codigo.setText("Por Código");
        menu_consulta_piezas.add(mi_piezas_codigo);

        mi_piezas_nombre.setText("Por Nombre");
        menu_consulta_piezas.add(mi_piezas_nombre);

        menu_piezas.add(menu_consulta_piezas);

        jMenuBar1.add(menu_piezas);

        menu_proyec.setText("Proyectos");

        mi_gestor_proyec.setText("Gestión de proyectos");
        mi_gestor_proyec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_gestor_proyecActionPerformed(evt);
            }
        });
        menu_proyec.add(mi_gestor_proyec);

        menu_consulta_proyec.setText("Consulta de proyectos");

        mi_proyec_codigo.setText("Por Códgio");
        menu_consulta_proyec.add(mi_proyec_codigo);

        mi_proyec_nombre.setText("Por Nombre");
        menu_consulta_proyec.add(mi_proyec_nombre);

        mi_proyec_ciudad.setText("Por Ciudad");
        menu_consulta_proyec.add(mi_proyec_ciudad);

        menu_proyec.add(menu_consulta_proyec);

        jMenuBar1.add(menu_proyec);

        menu_gestion.setText("Gestión");

        mi_relaciones.setText("Proveedor, pieza, proyecto");
        menu_gestion.add(mi_relaciones);

        mi_sumi_prov.setText("Suministros por proveedor");
        menu_gestion.add(mi_sumi_prov);

        mi_sumi_piezas.setText("Suministros por piezas");
        menu_gestion.add(mi_sumi_piezas);

        mi_estadisticas.setText("Estadísticas");
        menu_gestion.add(mi_estadisticas);

        jMenuBar1.add(menu_gestion);

        menu_ayuda.setText("Ayuda");
        jMenuBar1.add(menu_ayuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(jLabel1)
                .addContainerGap(320, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel1)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mi_crearBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_crearBDActionPerformed

        // CREAR CONEXIÓN E INSERTAR DATOS MUESTRA
        // ¿Existe la conexión?
        if (!conexion) {
            try {
                if (c == null) {
                    crearConexion();
                }
                this.jLabel1.setText("CONEXION OK");
                if (ejecutarScript(new File("..\\DatosMuestra.sql"))) {
                    String m = this.jLabel1.getText() + "// datos cargados OK";
                    this.jLabel1.setText(m);
                } else {
                    this.jLabel1.setText("ERROR cargando datos");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            // ADVERTENCIA
            //   this.jLabel1.setText("la conexión ya estaba creada");
            Advertencia a = new Advertencia();
            a.setTexto("La conexión ya estaba creada");
            a.setVisible(true);

        }

    }//GEN-LAST:event_mi_crearBDActionPerformed

    private void mi_borrarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_borrarBDActionPerformed

        // TODO add your handling code here:
        if (!conexion) {
            /*       Advertencia a = new Advertencia();
                a.setTexto("La BD no está creada");
                a.setVisible(true);*/
            conexionNoCreada();
        } else {
            try {
                // BORRAR BD
                if (ejecutarScript(new File("..\\BorrarDatos.sql"))) {
                    this.jLabel1.setText("Conexion cerrada y datos borrados.");
                    try {
                        c.close();
                        this.conexion = false;
                        System.out.println(c.toString());
                    } catch (SQLException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_mi_borrarBDActionPerformed

    private void mi_gestor_provActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_gestor_provActionPerformed
        // TODO add your handling code here:
        if (!conexion) {
            conexionNoCreada();
        } else {
            GestionDatos g = new GestionDatos();

            g.setCon(c);
            try {
                g.opcion("PROVEEDOR");
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            g.setVisible(true);

        }
    }//GEN-LAST:event_mi_gestor_provActionPerformed

    private void mi_gestor_piezasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_gestor_piezasActionPerformed
        // TODO add your handling code here:
        if (!conexion) {
            conexionNoCreada();
        } else {
            GestionDatos g = new GestionDatos();

            g.setCon(c);
            try {
                g.opcion("PIEZA");
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            g.setVisible(true);

        }
    }//GEN-LAST:event_mi_gestor_piezasActionPerformed

    private void mi_gestor_proyecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_gestor_proyecActionPerformed
        // TODO add your handling code here:
        if (!conexion) {
            conexionNoCreada();
        } else {
            GestionDatos g = new GestionDatos();
            g.setCon(c);
            try {
                g.opcion("PROYECTO");
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            g.setVisible(true);
        }
    }//GEN-LAST:event_mi_gestor_proyecActionPerformed

    private void mi_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_salirActionPerformed
        try {
            // TODO add your handling code here:
            salir();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mi_salirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            // TODO add your handling code here:
            salir();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_formWindowClosing

    /*
    MÉTODOS
     */
    private boolean ejecutarScript(File f) throws SQLException {
        BufferedReader entrada = null;

        try {
            entrada = new BufferedReader(new FileReader(f));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        String linea = null;
        StringBuilder stringBuilder = new StringBuilder();
        String salto = System.getProperty("line.separator");

        try {
            while ((linea = entrada.readLine()) != null) {
                stringBuilder.append(linea);
                stringBuilder.append(salto);
            }
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

        String consulta = stringBuilder.toString();
        Statement sents = null;
        int resultado = 0;
        if (c == null) {
            crearConexion();
        }

        try {
            sents = c.createStatement();
            resultado = sents.executeUpdate(consulta);
            sents.close();

        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (resultado > 0) {
            return true;
        } else {
            return false;
        }
    }

    private void conexionNoCreada() {
        Advertencia a = new Advertencia();
        a.setTexto("La BD no está creada");
        a.setVisible(true);
    }

    private void crearConexion() throws SQLException {
        this.c = (Connection) DriverManager.getConnection("jdbc:mysql://192.168.33.10/scotchbox?allowMultiQueries=true", "root", "root");
        this.conexion = true;
    }

    private void salir() throws SQLException {
        ejecutarScript(new File("..\\BorrarDatos.sql"));
        c.close();
        // System.exit(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenu menu_ayuda;
    private javax.swing.JMenu menu_bd;
    private javax.swing.JMenu menu_consulta_piezas;
    private javax.swing.JMenu menu_consulta_prov;
    private javax.swing.JMenu menu_consulta_proyec;
    private javax.swing.JMenu menu_gestion;
    private javax.swing.JMenu menu_piezas;
    private javax.swing.JMenu menu_prov;
    private javax.swing.JMenu menu_proyec;
    private javax.swing.JMenuItem mi_borrarBD;
    private javax.swing.JMenuItem mi_crearBD;
    private javax.swing.JMenuItem mi_estadisticas;
    private javax.swing.JMenuItem mi_gestor_piezas;
    private javax.swing.JMenuItem mi_gestor_prov;
    private javax.swing.JMenuItem mi_gestor_proyec;
    private javax.swing.JMenuItem mi_piezas_codigo;
    private javax.swing.JMenuItem mi_piezas_nombre;
    private javax.swing.JMenuItem mi_prov_codigo;
    private javax.swing.JMenuItem mi_prov_direc;
    private javax.swing.JMenuItem mi_prov_nombre;
    private javax.swing.JMenuItem mi_proyec_ciudad;
    private javax.swing.JMenuItem mi_proyec_codigo;
    private javax.swing.JMenuItem mi_proyec_nombre;
    private javax.swing.JMenuItem mi_relaciones;
    private javax.swing.JMenuItem mi_salir;
    private javax.swing.JMenuItem mi_sumi_piezas;
    private javax.swing.JMenuItem mi_sumi_prov;
    // End of variables declaration//GEN-END:variables

}
